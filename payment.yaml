- name: install payment component
  hosts: payment
  become: yes
  tasks:
  - name: Install Python
    ansible.builtin.yum:
      name: "{{item}}"
      state: installed
    loop:
    - python36
    - gcc
    - python3-devel

  - name: check user exist or not if not exist create
    ansible.builtin.command: id roboshop
    register: roboid
    ignore_errors: true

  - when: roboid.rc!= 0
    name: create roboshp user
    ansible.builtin.user:
      name: roboshop

  - name:  check /app directory exists or not
    ansible.builtin.stat:
      path: /app
    register: dir

  - name: print directory stats
    ansible.builtin.debug:
      msg: "Output: {{dir}}"

  - when: dir.stat.exists == False
    name: crate /app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download and unarchive payments artifacts
    ansible.builtin.unarchive:
      src: https://roboshop-builds.s3.amazonaws.com/payment.zip
      dest: /app
      remote_src: yes
  
  - name: install dependencies
    ansible.builtin.command: pip3.6 install -r requirements.txt
    args:
      chdir: /app

  - name: copy payment service
    ansible.builtin.copy:
      src: payment.service
      dest: /etc/systemd/system/payment.service 

  - name: daemon reload
    ansible.builtin.systemd:
      daemon_reload: true

  - name: start the payment service
    ansible.builtin.service:
      name: payment
      state: started
      enabled: yes


      